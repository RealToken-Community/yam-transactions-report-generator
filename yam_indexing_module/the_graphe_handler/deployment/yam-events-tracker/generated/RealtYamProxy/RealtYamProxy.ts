// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AdminChanged extends ethereum.Event {
  get params(): AdminChanged__Params {
    return new AdminChanged__Params(this);
  }
}

export class AdminChanged__Params {
  _event: AdminChanged;

  constructor(event: AdminChanged) {
    this._event = event;
  }

  get previousAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BeaconUpgraded extends ethereum.Event {
  get params(): BeaconUpgraded__Params {
    return new BeaconUpgraded__Params(this);
  }
}

export class BeaconUpgraded__Params {
  _event: BeaconUpgraded;

  constructor(event: BeaconUpgraded) {
    this._event = event;
  }

  get beacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class FeeChanged extends ethereum.Event {
  get params(): FeeChanged__Params {
    return new FeeChanged__Params(this);
  }
}

export class FeeChanged__Params {
  _event: FeeChanged;

  constructor(event: FeeChanged) {
    this._event = event;
  }

  get oldFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newFee(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class OfferAccepted extends ethereum.Event {
  get params(): OfferAccepted__Params {
    return new OfferAccepted__Params(this);
  }
}

export class OfferAccepted__Params {
  _event: OfferAccepted;

  constructor(event: OfferAccepted) {
    this._event = event;
  }

  get offerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get seller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get buyer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get offerToken(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get buyerToken(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get price(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class OfferCreated extends ethereum.Event {
  get params(): OfferCreated__Params {
    return new OfferCreated__Params(this);
  }
}

export class OfferCreated__Params {
  _event: OfferCreated;

  constructor(event: OfferCreated) {
    this._event = event;
  }

  get offerToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get buyerToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get seller(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get buyer(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get offerId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class OfferDeleted extends ethereum.Event {
  get params(): OfferDeleted__Params {
    return new OfferDeleted__Params(this);
  }
}

export class OfferDeleted__Params {
  _event: OfferDeleted;

  constructor(event: OfferDeleted) {
    this._event = event;
  }

  get offerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OfferUpdated extends ethereum.Event {
  get params(): OfferUpdated__Params {
    return new OfferUpdated__Params(this);
  }
}

export class OfferUpdated__Params {
  _event: OfferUpdated;

  constructor(event: OfferUpdated) {
    this._event = event;
  }

  get offerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get oldPrice(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newPrice(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get oldAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get newAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class TokenWhitelistWithTypeToggled extends ethereum.Event {
  get params(): TokenWhitelistWithTypeToggled__Params {
    return new TokenWhitelistWithTypeToggled__Params(this);
  }
}

export class TokenWhitelistWithTypeToggled__Params {
  _event: TokenWhitelistWithTypeToggled;

  constructor(event: TokenWhitelistWithTypeToggled) {
    this._event = event;
  }

  get tokens(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get types(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RealtYamProxy__getInitialOfferResult {
  value0: Address;
  value1: Address;
  value2: Address;
  value3: Address;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: Address,
    value1: Address,
    value2: Address,
    value3: Address,
    value4: BigInt,
    value5: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getValue0(): Address {
    return this.value0;
  }

  getValue1(): Address {
    return this.value1;
  }

  getValue2(): Address {
    return this.value2;
  }

  getValue3(): Address {
    return this.value3;
  }

  getValue4(): BigInt {
    return this.value4;
  }

  getValue5(): BigInt {
    return this.value5;
  }
}

export class RealtYamProxy__showOfferResult {
  value0: Address;
  value1: Address;
  value2: Address;
  value3: Address;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: Address,
    value1: Address,
    value2: Address,
    value3: Address,
    value4: BigInt,
    value5: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getValue0(): Address {
    return this.value0;
  }

  getValue1(): Address {
    return this.value1;
  }

  getValue2(): Address {
    return this.value2;
  }

  getValue3(): Address {
    return this.value3;
  }

  getValue4(): BigInt {
    return this.value4;
  }

  getValue5(): BigInt {
    return this.value5;
  }
}

export class RealtYamProxy__tokenInfoResult {
  value0: BigInt;
  value1: string;
  value2: string;

  constructor(value0: BigInt, value1: string, value2: string) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): string {
    return this.value1;
  }

  getValue2(): string {
    return this.value2;
  }
}

export class RealtYamProxy extends ethereum.SmartContract {
  static bind(address: Address): RealtYamProxy {
    return new RealtYamProxy("RealtYamProxy", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MODERATOR_ROLE(): Bytes {
    let result = super.call("MODERATOR_ROLE", "MODERATOR_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_MODERATOR_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "MODERATOR_ROLE",
      "MODERATOR_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  UPGRADER_ROLE(): Bytes {
    let result = super.call("UPGRADER_ROLE", "UPGRADER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_UPGRADER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "UPGRADER_ROLE",
      "UPGRADER_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  fee(): BigInt {
    let result = super.call("fee", "fee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_fee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("fee", "fee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getInitialOffer(offerId: BigInt): RealtYamProxy__getInitialOfferResult {
    let result = super.call(
      "getInitialOffer",
      "getInitialOffer(uint256):(address,address,address,address,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(offerId)],
    );

    return new RealtYamProxy__getInitialOfferResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toAddress(),
      result[4].toBigInt(),
      result[5].toBigInt(),
    );
  }

  try_getInitialOffer(
    offerId: BigInt,
  ): ethereum.CallResult<RealtYamProxy__getInitialOfferResult> {
    let result = super.tryCall(
      "getInitialOffer",
      "getInitialOffer(uint256):(address,address,address,address,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(offerId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new RealtYamProxy__getInitialOfferResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toAddress(),
        value[4].toBigInt(),
        value[5].toBigInt(),
      ),
    );
  }

  getOfferCount(): BigInt {
    let result = super.call("getOfferCount", "getOfferCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getOfferCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getOfferCount",
      "getOfferCount():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role),
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getTokenType(token: Address): i32 {
    let result = super.call("getTokenType", "getTokenType(address):(uint8)", [
      ethereum.Value.fromAddress(token),
    ]);

    return result[0].toI32();
  }

  try_getTokenType(token: Address): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getTokenType",
      "getTokenType(address):(uint8)",
      [ethereum.Value.fromAddress(token)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  pricePreview(offerId: BigInt, amount: BigInt): BigInt {
    let result = super.call(
      "pricePreview",
      "pricePreview(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(offerId),
        ethereum.Value.fromUnsignedBigInt(amount),
      ],
    );

    return result[0].toBigInt();
  }

  try_pricePreview(
    offerId: BigInt,
    amount: BigInt,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "pricePreview",
      "pricePreview(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(offerId),
        ethereum.Value.fromUnsignedBigInt(amount),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  showOffer(offerId: BigInt): RealtYamProxy__showOfferResult {
    let result = super.call(
      "showOffer",
      "showOffer(uint256):(address,address,address,address,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(offerId)],
    );

    return new RealtYamProxy__showOfferResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toAddress(),
      result[4].toBigInt(),
      result[5].toBigInt(),
    );
  }

  try_showOffer(
    offerId: BigInt,
  ): ethereum.CallResult<RealtYamProxy__showOfferResult> {
    let result = super.tryCall(
      "showOffer",
      "showOffer(uint256):(address,address,address,address,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(offerId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new RealtYamProxy__showOfferResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toAddress(),
        value[4].toBigInt(),
        value[5].toBigInt(),
      ),
    );
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  tokenInfo(tokenAddr: Address): RealtYamProxy__tokenInfoResult {
    let result = super.call(
      "tokenInfo",
      "tokenInfo(address):(uint256,string,string)",
      [ethereum.Value.fromAddress(tokenAddr)],
    );

    return new RealtYamProxy__tokenInfoResult(
      result[0].toBigInt(),
      result[1].toString(),
      result[2].toString(),
    );
  }

  try_tokenInfo(
    tokenAddr: Address,
  ): ethereum.CallResult<RealtYamProxy__tokenInfoResult> {
    let result = super.tryCall(
      "tokenInfo",
      "tokenInfo(address):(uint256,string,string)",
      [ethereum.Value.fromAddress(tokenAddr)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new RealtYamProxy__tokenInfoResult(
        value[0].toBigInt(),
        value[1].toString(),
        value[2].toString(),
      ),
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class BuyCall extends ethereum.Call {
  get inputs(): BuyCall__Inputs {
    return new BuyCall__Inputs(this);
  }

  get outputs(): BuyCall__Outputs {
    return new BuyCall__Outputs(this);
  }
}

export class BuyCall__Inputs {
  _call: BuyCall;

  constructor(call: BuyCall) {
    this._call = call;
  }

  get offerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get price(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class BuyCall__Outputs {
  _call: BuyCall;

  constructor(call: BuyCall) {
    this._call = call;
  }
}

export class BuyOfferBatchCall extends ethereum.Call {
  get inputs(): BuyOfferBatchCall__Inputs {
    return new BuyOfferBatchCall__Inputs(this);
  }

  get outputs(): BuyOfferBatchCall__Outputs {
    return new BuyOfferBatchCall__Outputs(this);
  }
}

export class BuyOfferBatchCall__Inputs {
  _call: BuyOfferBatchCall;

  constructor(call: BuyOfferBatchCall) {
    this._call = call;
  }

  get _offerIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _prices(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _amounts(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class BuyOfferBatchCall__Outputs {
  _call: BuyOfferBatchCall;

  constructor(call: BuyOfferBatchCall) {
    this._call = call;
  }
}

export class BuyWithPermitCall extends ethereum.Call {
  get inputs(): BuyWithPermitCall__Inputs {
    return new BuyWithPermitCall__Inputs(this);
  }

  get outputs(): BuyWithPermitCall__Outputs {
    return new BuyWithPermitCall__Outputs(this);
  }
}

export class BuyWithPermitCall__Inputs {
  _call: BuyWithPermitCall;

  constructor(call: BuyWithPermitCall) {
    this._call = call;
  }

  get offerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get price(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }
}

export class BuyWithPermitCall__Outputs {
  _call: BuyWithPermitCall;

  constructor(call: BuyWithPermitCall) {
    this._call = call;
  }
}

export class CreateOfferCall extends ethereum.Call {
  get inputs(): CreateOfferCall__Inputs {
    return new CreateOfferCall__Inputs(this);
  }

  get outputs(): CreateOfferCall__Outputs {
    return new CreateOfferCall__Outputs(this);
  }
}

export class CreateOfferCall__Inputs {
  _call: CreateOfferCall;

  constructor(call: CreateOfferCall) {
    this._call = call;
  }

  get offerToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get buyerToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get buyer(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get price(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class CreateOfferCall__Outputs {
  _call: CreateOfferCall;

  constructor(call: CreateOfferCall) {
    this._call = call;
  }
}

export class CreateOfferBatchCall extends ethereum.Call {
  get inputs(): CreateOfferBatchCall__Inputs {
    return new CreateOfferBatchCall__Inputs(this);
  }

  get outputs(): CreateOfferBatchCall__Outputs {
    return new CreateOfferBatchCall__Outputs(this);
  }
}

export class CreateOfferBatchCall__Inputs {
  _call: CreateOfferBatchCall;

  constructor(call: CreateOfferBatchCall) {
    this._call = call;
  }

  get _offerTokens(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _buyerTokens(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get _buyers(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }

  get _prices(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get _amounts(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }
}

export class CreateOfferBatchCall__Outputs {
  _call: CreateOfferBatchCall;

  constructor(call: CreateOfferBatchCall) {
    this._call = call;
  }
}

export class CreateOfferWithPermitCall extends ethereum.Call {
  get inputs(): CreateOfferWithPermitCall__Inputs {
    return new CreateOfferWithPermitCall__Inputs(this);
  }

  get outputs(): CreateOfferWithPermitCall__Outputs {
    return new CreateOfferWithPermitCall__Outputs(this);
  }
}

export class CreateOfferWithPermitCall__Inputs {
  _call: CreateOfferWithPermitCall;

  constructor(call: CreateOfferWithPermitCall) {
    this._call = call;
  }

  get offerToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get buyerToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get buyer(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get price(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get newAllowance(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[7].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[8].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[9].value.toBytes();
  }
}

export class CreateOfferWithPermitCall__Outputs {
  _call: CreateOfferWithPermitCall;

  constructor(call: CreateOfferWithPermitCall) {
    this._call = call;
  }
}

export class DeleteOfferCall extends ethereum.Call {
  get inputs(): DeleteOfferCall__Inputs {
    return new DeleteOfferCall__Inputs(this);
  }

  get outputs(): DeleteOfferCall__Outputs {
    return new DeleteOfferCall__Outputs(this);
  }
}

export class DeleteOfferCall__Inputs {
  _call: DeleteOfferCall;

  constructor(call: DeleteOfferCall) {
    this._call = call;
  }

  get offerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DeleteOfferCall__Outputs {
  _call: DeleteOfferCall;

  constructor(call: DeleteOfferCall) {
    this._call = call;
  }
}

export class DeleteOfferBatchCall extends ethereum.Call {
  get inputs(): DeleteOfferBatchCall__Inputs {
    return new DeleteOfferBatchCall__Inputs(this);
  }

  get outputs(): DeleteOfferBatchCall__Outputs {
    return new DeleteOfferBatchCall__Outputs(this);
  }
}

export class DeleteOfferBatchCall__Inputs {
  _call: DeleteOfferBatchCall;

  constructor(call: DeleteOfferBatchCall) {
    this._call = call;
  }

  get offerIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class DeleteOfferBatchCall__Outputs {
  _call: DeleteOfferBatchCall;

  constructor(call: DeleteOfferBatchCall) {
    this._call = call;
  }
}

export class DeleteOfferByAdminCall extends ethereum.Call {
  get inputs(): DeleteOfferByAdminCall__Inputs {
    return new DeleteOfferByAdminCall__Inputs(this);
  }

  get outputs(): DeleteOfferByAdminCall__Outputs {
    return new DeleteOfferByAdminCall__Outputs(this);
  }
}

export class DeleteOfferByAdminCall__Inputs {
  _call: DeleteOfferByAdminCall;

  constructor(call: DeleteOfferByAdminCall) {
    this._call = call;
  }

  get offerIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class DeleteOfferByAdminCall__Outputs {
  _call: DeleteOfferByAdminCall;

  constructor(call: DeleteOfferByAdminCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get admin_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get moderator_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SaveLostTokensCall extends ethereum.Call {
  get inputs(): SaveLostTokensCall__Inputs {
    return new SaveLostTokensCall__Inputs(this);
  }

  get outputs(): SaveLostTokensCall__Outputs {
    return new SaveLostTokensCall__Outputs(this);
  }
}

export class SaveLostTokensCall__Inputs {
  _call: SaveLostTokensCall;

  constructor(call: SaveLostTokensCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SaveLostTokensCall__Outputs {
  _call: SaveLostTokensCall;

  constructor(call: SaveLostTokensCall) {
    this._call = call;
  }
}

export class SetFeeCall extends ethereum.Call {
  get inputs(): SetFeeCall__Inputs {
    return new SetFeeCall__Inputs(this);
  }

  get outputs(): SetFeeCall__Outputs {
    return new SetFeeCall__Outputs(this);
  }
}

export class SetFeeCall__Inputs {
  _call: SetFeeCall;

  constructor(call: SetFeeCall) {
    this._call = call;
  }

  get fee_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetFeeCall__Outputs {
  _call: SetFeeCall;

  constructor(call: SetFeeCall) {
    this._call = call;
  }
}

export class ToggleWhitelistWithTypeCall extends ethereum.Call {
  get inputs(): ToggleWhitelistWithTypeCall__Inputs {
    return new ToggleWhitelistWithTypeCall__Inputs(this);
  }

  get outputs(): ToggleWhitelistWithTypeCall__Outputs {
    return new ToggleWhitelistWithTypeCall__Outputs(this);
  }
}

export class ToggleWhitelistWithTypeCall__Inputs {
  _call: ToggleWhitelistWithTypeCall;

  constructor(call: ToggleWhitelistWithTypeCall) {
    this._call = call;
  }

  get tokens_(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get types_(): Array<i32> {
    return this._call.inputValues[1].value.toI32Array();
  }
}

export class ToggleWhitelistWithTypeCall__Outputs {
  _call: ToggleWhitelistWithTypeCall;

  constructor(call: ToggleWhitelistWithTypeCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UpdateOfferCall extends ethereum.Call {
  get inputs(): UpdateOfferCall__Inputs {
    return new UpdateOfferCall__Inputs(this);
  }

  get outputs(): UpdateOfferCall__Outputs {
    return new UpdateOfferCall__Outputs(this);
  }
}

export class UpdateOfferCall__Inputs {
  _call: UpdateOfferCall;

  constructor(call: UpdateOfferCall) {
    this._call = call;
  }

  get offerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get price(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class UpdateOfferCall__Outputs {
  _call: UpdateOfferCall;

  constructor(call: UpdateOfferCall) {
    this._call = call;
  }
}

export class UpdateOfferBatchCall extends ethereum.Call {
  get inputs(): UpdateOfferBatchCall__Inputs {
    return new UpdateOfferBatchCall__Inputs(this);
  }

  get outputs(): UpdateOfferBatchCall__Outputs {
    return new UpdateOfferBatchCall__Outputs(this);
  }
}

export class UpdateOfferBatchCall__Inputs {
  _call: UpdateOfferBatchCall;

  constructor(call: UpdateOfferBatchCall) {
    this._call = call;
  }

  get _offerIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _prices(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _amounts(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class UpdateOfferBatchCall__Outputs {
  _call: UpdateOfferBatchCall;

  constructor(call: UpdateOfferBatchCall) {
    this._call = call;
  }
}

export class UpdateOfferWithPermitCall extends ethereum.Call {
  get inputs(): UpdateOfferWithPermitCall__Inputs {
    return new UpdateOfferWithPermitCall__Inputs(this);
  }

  get outputs(): UpdateOfferWithPermitCall__Outputs {
    return new UpdateOfferWithPermitCall__Outputs(this);
  }
}

export class UpdateOfferWithPermitCall__Inputs {
  _call: UpdateOfferWithPermitCall;

  constructor(call: UpdateOfferWithPermitCall) {
    this._call = call;
  }

  get offerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get price(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get newAllowance(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[5].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[7].value.toBytes();
  }
}

export class UpdateOfferWithPermitCall__Outputs {
  _call: UpdateOfferWithPermitCall;

  constructor(call: UpdateOfferWithPermitCall) {
    this._call = call;
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}
